---
- name: Check Vault version
  ansible.builtin.command: vault -version
  register: installed_vault_version
  changed_when: false

- name: Get Vault for Vault agent
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ vault_zip_url }}"
    dest: "{{ vault_agent_bin_dest }}"
    mode: "0777"
    owner: root
    group: root
  when: vault_version not in installed_vault_version.stdout


- name: Ensure Vault configuration directory
  ansible.builtin.file:
    path: "{{ vault_config_dir }}"
    state: directory
    mode: 0700
    owner: root
    group: root

- name: Template vault agent configuration
  ansible.builtin.template:
    src: etc/vault.d/vault-agent.hcl.j2
    dest: "{{ vault_config_dir }}/vault-agent.hcl"
    mode: 0644
    owner: root
    group: root
    block_start_string: "[%"
    block_end_string: "%]"
    variable_start_string: "[["
    variable_end_string: "]]"
    # validate: hclfmt %s

- name: AppRole Auth Auth
  block:
    - name: Lookup Role ID
      become: false
      ansible.builtin.uri:
        url: "{{ lookup('env', 'VAULT_ADDR') }}/v1/auth/{{ approle.mount }}/role/{{ approle.role }}/role-id"
        dest: "/tmp/approle.json"
        method: GET
        return_content: true
        status_code: [200]
        headers:
          X-Vault-Token: "{{ lookup('env', 'VAULT_TOKEN') }}"
        http_agent: ansible-httpget
      register: response
      delegate_to: localhost

    - name: Deliver Role ID
      ansible.builtin.copy:
        dest: "{{ vault_config_dir }}/roleid"
        content: "{{ response.json.data.role_id }}"
        backup: true
        mode: "0644"
        owner: root
        group: root
  # When the service is not resolvable via DNS, get it from consul directly
  rescue:
    - name: Get Vault service address from Consul
      become: false
      ansible.builtin.uri:
        url: "{{ lookup('env', 'CONSUL_HTTP_ADDR') }}/v1/catalog/service/vault"
        method: GET
        return_content: true
      register: vault_address
      delegate_to: localhost
    - name: Lookup Role ID
      become: false
      ansible.builtin.uri:
        url: "http://{{ vault_address.json[0].Address }}:8200/v1/auth/{{ approle.mount }}/role/{{ approle.role }}/role-id"
        dest: "/tmp/approle.json"
        method: GET
        return_content: true
        status_code: [200]
        headers:
          X-Vault-Token: "{{ lookup('env', 'VAULT_TOKEN') }}"
        http_agent: ansible-httpget
      register: response

    - name: Deliver Role ID
      ansible.builtin.copy:
        dest: "{{ vault_config_dir }}/roleid"
        content: "{{ response.json.data.role_id }}"
        backup: true
        mode: 0644
        owner: root
        group: root
  when: auto_auth == 'approle'

- name: Copy Vault Agent templates
  ansible.builtin.template:
    dest: "{{ item.template_source }}"
    src: "{{ item.source }}"
    block_start_string: "[%"
    block_end_string: "%]"
    variable_start_string: "[["
    variable_end_string: "]]"
    backup: true
    mode: 0644
    owner: root
    group: root
  loop: "{{ vault_agent_templates }}"
  notify: Ensure Vault Agent Service

- name: Add Vault Agent systemd unit
  ansible.builtin.template:
    src: etc/systemd/system/vault-agent.service.j2
    dest: /etc/systemd/system/vault-agent.service
    mode: 0644
    owner: root
    group: root
    trim_blocks: true
    lstrip_blocks: true
    # validate: systemd-analyze verify %s
  notify:
    - enable vault-agent
    - Ensure Vault Agent Service

- name: Enable Vault Agent service
  ansible.builtin.systemd:
    name: vault-agent
    state: started
    enabled: true
    daemon_reload: true
  notify: Ensure Vault Agent Service
